Equality

To check if two Python values, or variables, are equal you can use ==. To check for inequality, you need !=. As a refresher, have a look at the following examples that all result in True. Feel free to try them out in the IPython Shell.

2 == (1 + 1)
"intermediate" != "python"
True != False
"Python" != "python"

When you write these comparisons in a script, you will need to wrap a print() function around them to see the output.



    In the editor on the right, write code to see if True equals False.
    Write Python code to check if -5 * 15 is not equal to 75.
    Ask Python whether the strings "pyscript" and "PyScript" are equal.
    What happens if you compare booleans and integers? Write code to see if True and 1 are equal.


# Comparison of booleans
print(True==False)

# Comparison of integers
print(-5*15!=75)

# Comparison of strings
print("pyscript"=="PyScript")
# Compare a boolean with an integer
print(True ==1)

Greater and less than

In the video, Filip also talked about the less than and greater than signs, < and > in Python. You can combine them with an equals sign: <= and >=. Pay attention: <= is valid syntax, but =< is not.

All Python expressions in the following code chunk evaluate to True:

3 < 4
3 <= 4
"alpha" <= "beta"

Remember that for string comparison, Python determines the relationship based on alphabetical order.

Write Python expressions, wrapped in a print() function, to check whether:

    x is greater than or equal to -10. x has already been defined for you.
    "test" is less than or equal to y. y has already been defined for you.
    True is greater than False.
    
    # Comparison of integers
x = -3 * 6
print(x >= -10)

# Comparison of strings
y = "test"
print("test" <= y)

# Comparison of booleans
print(True > False)

Compare arrays

Out of the box, you can also use comparison operators with Numpy arrays.

Remember areas, the list of area measurements for different rooms in your house from the previous course? This time there's two Numpy arrays: my_house and your_house. They both contain the areas for the kitchen, living room, bedroom and bathroom in the same order, so you can compare them.


    Using comparison operators, generate boolean arrays that answer the following questions:
        Which areas in my_house are greater than or equal to 18?
        You can also compare two Numpy arrays element-wise. Which areas in my_house are smaller than the ones in your_house?

Make sure to wrap both commands in a print() statement, so that you can inspect the output.

# Create arrays
import numpy as np
my_house = np.array([18.0, 20.0, 10.75, 9.50])
your_house = np.array([14.0, 24.0, 14.25, 9.0])

# my_house greater than or equal to 18
print(my_house >= 18)

# my_house less than your_house
print(my_house < your_house)
